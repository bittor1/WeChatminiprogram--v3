brd文档：伦敦必吃榜项目业务需求文档（BRD） 1. 项目背景与目标 1.1 项目概述 "伦敦必吃榜"是一个面向伦敦留学生群体的社交娱乐微信小程序，提供朋友圈内部的"魅力指数"排行榜功能。用户可以提名朋友上榜，通过投票、评论、弹幕等方式互动，记录朋友的有趣经历，增强社交连接和娱乐体验。 1.2 项目目标 创建一个有趣的社交互动平台，让伦敦留学生可以相互评价和调侃 通过投票、评论、弹幕等功能增强用户参与度和黏性 记录和分享朋友间的有趣经历和事迹 建立一个轻松愉快的社区氛围 1.3 用户画像 主要用户：伦敦地区的中国留学生 年龄段：18-30岁 使用场景：社交聚会、朋友聚餐、日常娱乐 使用动机：社交互动、娱乐消遣、记录朋友间的趣事 2. 功能需求 2.1 核心功能模块 2.1.1 排行榜系统 首页排行榜：展示被提名者按投票数排序的列表 排行榜统计：显示总投票数、总提名数、参与用户数等统计信息 排行榜筛选：支持按热度、时间等维度筛选排序 2.1.2 提名系统 创建提名：用户可以提名朋友上榜，包括姓名、照片、简介等信息 管理提名：用户可以查看、编辑、删除自己创建的提名 提名详情：展示提名者的详细信息、投票数、评论等 2.1.3 投票系统 投票机制：用户每天可对每个提名投一次票（最多10票/天） 拒吃机制：用户每天可对每个提名进行一次拒吃操作（最多5次/天） 免费票：通过分享小程序获得额外投票机会 投票限制：同一用户在同一天内不能同时对一个提名进行投票和拒吃 投票统计：记录和展示投票数据和趋势 2.1.4 评论系统 评论功能：用户可以对提名发表评论 评论管理：支持评论的查看、删除等操作 评论通知：当提名收到新评论时，通知提名创建者 2.1.5 弹幕系统 发送弹幕：用户可以在提名详情页发送滚动弹幕 弹幕显示：弹幕以滚动方式在页面上展示 弹幕设置：支持设置弹幕颜色、位置等属性 2.1.6 事迹系统 事迹报告：用户可以记录关于被提名者的趣事/轶事 事迹墙：展示所有或特定提名的事迹记录 事迹管理：支持事迹的创建、查看等操作 2.1.7 成就系统 投票里程碑：当提名获得特定数量的投票时（10、50、100、500、1000票）授予成就 成就展示：在提名详情页展示获得的成就 成就通知：当获得新成就时，通知相关用户 2.1.8 用户系统 用户登录：基于微信授权的登录机制 用户中心：展示用户的投票、提名、评论等活动 个人统计：统计用户的投票数、提名数、成就数等数据 2.1.9 消息通知系统 投票通知：当提名收到投票时，通知提名创建者 评论通知：当提名收到评论时，通知提名创建者 成就通知：当提名达到成就里程碑时，通知相关用户 系统通知：平台公告、活动信息等系统通知 2.1.10 分享系统 分享机制：支持分享提名、排行榜到微信好友或朋友圈 分享奖励：通过分享获得额外的投票机会 分享统计：记录和分析分享数据 2.2 辅助功能模块 2.2.1 内容审核 文本审核：对评论、弹幕等文本内容进行审核 图片审核：对提名照片、事迹图片等进行审核 审核日志：记录内容审核的过程和结果 2.2.2 数据统计与分析 用户活跃度：统计用户的活跃情况 投票趋势：分析投票数据的变化趋势 热门提名：识别和推荐热门提名 2.2.3 设置与配置 声音设置：配置应用内声音效果 通知设置：管理消息通知的接收方式和频率 隐私设置：控制个人信息的展示范围 3. 用户流程 3.1 核心用户流程 3.1.1 用户注册/登录流程 用户打开小程序 点击登录按钮 授权微信登录 系统创建/更新用户信息 进入小程序首页 3.1.2 浏览排行榜流程 用户进入首页 查看排行榜列表 可选择不同排序方式（热度、时间等） 点击提名卡片进入详情页 3.1.3 提名流程 用户点击"创建提名"按钮 填写提名信息（姓名、照片、简介等） 提交提名 系统审核提名内容 审核通过后提名上榜 3.1.4 投票流程 用户进入提名详情页 点击"投票"按钮 系统验证投票资格（每日限额、是否已投票等） 记录投票并更新提名票数 检查是否达到成就里程碑 3.1.5 评论/弹幕流程 用户进入提名详情页 点击"评论"或"弹幕"按钮 输入评论/弹幕内容 提交评论/弹幕 系统审核内容 审核通过后显示评论/弹幕 3.1.6 事迹报告流程 用户进入提名详情页 点击"报告事迹"按钮 填写事迹内容，可选择上传图片 提交事迹 系统审核内容 审核通过后事迹显示在事迹墙 3.1.7 分享流程 用户在详情页点击"分享"按钮 选择分享方式（微信好友、朋友圈等） 完成分享 系统记录分享行为 用户获得额外投票机会 3.2 管理流程 3.2.1 内容审核流程 用户提交内容（提名、评论、事迹等） 系统自动审核内容 对于需要人工审核的内容，管理员进行审核 审核通过的内容正常显示 审核不通过的内容被拒绝显示 3.2.2 用户管理流程 管理员查看用户列表 可以查看用户详情、活动记录 对违规用户进行处理（警告、禁言等） 4. 数据模型 4.1 核心数据集合 4.1.1 用户集合 (users) _id: 用户ID openid: 微信openid name/nickName: 用户名/昵称 avatar/avatarUrl: 用户头像 roles: 用户角色数组 lastLoginTime: 最后登录时间 createTime: 创建时间 4.1.2 提名集合 (entries) _id: 提名ID name: 提名者姓名 description: 提名描述 imageUrl/avatarUrl: 提名者照片 votes: 投票数 downvotes: 减票数 commentCount: 评论数 trend: 趋势 ('up', 'down', 'stable') hotLevel: 热度等级 createdBy: 创建者ID createdAt: 创建时间 _createTime: 创建时间戳 4.1.3 投票集合 (votes) _id: 投票ID _openid: 投票者openid targetId: 目标提名ID count: 投票数量 type: 投票类型 ('daily', 'free', 'downvote') createTime: 创建时间 4.1.4 评论集合 (comments) _id: 评论ID nominationId: 提名ID content: 评论内容 userId: 用户ID openid: 用户openid createTime: 创建时间 status: 状态 ('active', 'deleted') 4.1.5 弹幕集合 (danmakus) _id: 弹幕ID openid: 用户openid targetId: 目标提名ID text: 弹幕内容 color: 弹幕颜色 top: 弹幕位置 duration: 弹幕持续时间 createTime: 创建时间 4.1.6 事迹集合 (achievements) _id: 事迹ID userId: 目标用户ID content: 事迹内容 imageUrl: 事迹图片 createdBy: 创建者ID creatorName: 创建者名称 creatorAvatar: 创建者头像 createdAt: 创建时间 _createTime: 创建时间戳 4.1.7 成就集合 (achievements) _id: 成就ID targetId: 目标提名ID type: 成就类型 ('vote_milestone') milestone: 里程碑数值 title: 成就标题 description: 成就描述 createTime: 创建时间 _openid: 触发成就的用户 4.1.8 消息集合 (messages) _id: 消息ID receiverId: 接收者ID senderId: 发送者ID senderName: 发送者名称 senderAvatar: 发送者头像 type: 消息类型 ('system', 'vote', 'comment', 'nomination') content: 消息内容 read: 是否已读 nominationId: 相关提名ID nominationTitle: 相关提名标题 readTime: 阅读时间 createTime: 创建时间 _createTime: 创建时间戳 4.1.9 分享记录集合 (share_records) _id: 分享记录ID userId: 分享者ID type: 分享类型 ('nomination', 'ranking', 'profile') targetId: 分享目标ID platform: 分享平台 title: 分享标题 path: 小程序路径 clicks: 点击次数 used: 是否已使用 usedTime: 使用时间 usedFor: 使用目标 createTime: 创建时间 _createTime: 创建时间戳 4.1.10 内容审核日志集合 (content_review_logs) _id: 日志ID type: 审核类型 ('text', 'image') contentType: 内容类型 ('comment', 'nomination', 'avatar') content: 被审核内容 pass: 是否通过审核 result: 审核结果详情 createTime: 创建时间 4.2 数据关系图 Apply to submission_m... 5. 技术架构 5.1 前端架构 框架：微信小程序原生框架 状态管理：MobX (mobx-miniprogram, mobx-miniprogram-bindings) UI组件：自定义组件 + WeUI 事件通信：EventBus模式 5.2 后端架构 云函数：微信云开发云函数 数据库：微信云开发数据库 存储：微信云开发云存储 内容审核：微信内容安全API 5.3 云函数列表 achievementManage: 成就管理 commentManage: 评论管理 contentReview: 内容审核 danmakuManage: 弹幕管理 dbInit: 数据库初始化 detailPageData: 详情页数据 grantShareReward: 分享奖励 indexPageData: 首页数据 login: 登录管理 messageManage: 消息管理 nominationManage: 提名管理 shareAnalytics: 分享分析 soundManage: 声音管理 statistics: 统计分析 userManage: 用户管理 videoToGif: 视频转GIF voteManage: 投票管理 5.4 页面列表 pages/index/index: 首页排行榜 pages/detail/detail: 提名详情页 pages/create/create: 创建提名页 pages/add/add: 添加页面 pages/about/about: 关于页面 pages/orders/orders: 订单页面 pages/my-nominations/my-nominations: 我的提名页 pages/my-votes/my-votes: 我的投票页 pages/sound-settings/sound-settings: 声音设置页 pages/report-deed/report-deed: 报告事迹页 pages/deeds-wall/deeds-wall: 事迹墙页 5.5 组件列表 components/auth-dialog: 授权对话框 components/custom-nav-bar: 自定义导航栏 components/danmaku-panel: 弹幕面板 components/downvote-button: 减票按钮 components/login-dialog: 登录对话框 components/user-center-drawer: 用户中心抽屉 components/vote-button: 投票按钮 6. 非功能需求 6.1 性能需求 首页加载时间控制在3秒以内 投票、评论等操作响应时间不超过1秒 支持同时在线用户数不少于1000人 数据缓存机制减少网络请求，提高响应速度 6.2 安全需求 用户数据加密存储 内容审核机制，过滤不适当内容 防止刷票、刷评论等恶意行为 权限控制，确保用户只能操作自己的数据 6.3 可用性需求 简洁直观的用户界面 操作流程简单明了 适配不同尺寸的移动设备 提供清晰的错误提示和引导 6.4 可维护性需求 模块化的代码结构 完善的错误处理和日志记录 清晰的代码注释和文档 便于扩展的架构设计 7. 约束与风险 7.1 微信生态限制 小程序代码包大小限制 微信登录和用户信息获取的限制 微信云开发资源使用限制 小程序审核政策限制 7.2 技术风险 数据一致性风险：多用户并发操作时的数据一致性问题 性能风险：高并发场景下的性能瓶颈 安全风险：用户数据安全和内容安全风险 兼容性风险：不同设备和系统版本的兼容性问题 7.3 业务风险 用户参与度不足的风险 内容质量控制风险 用户隐私保护风险 社区氛围管理风险 8. 项目规划 8.1 开发阶段 需求分析与设计：明确需求，设计系统架构和数据模型 核心功能开发：实现排行榜、提名、投票等核心功能 辅助功能开发：实现评论、弹幕、事迹等辅助功能 系统集成与测试：整合各模块，进行系统测试 优化与发布：性能优化，准备发布材料 8.2 测试计划 单元测试：测试各功能模块的正确性 集成测试：测试模块间的交互和数据流 性能测试：测试系统在高负载下的表现 兼容性测试：测试在不同设备和系统版本上的兼容性 安全测试：测试系统的安全性和数据保护 8.3 发布计划 内部测试版：小范围内部测试 公测版：扩大测试范围，收集用户反馈 正式版：修复问题，优化体验，正式发布 迭代更新：根据用户反馈持续优化和更新 9. 附录 9.1 术语表 提名：被推荐上榜的人物 投票：对提名进行正向评价 拒吃：对提名进行负向评价 事迹：关于提名的趣事或轶事 弹幕：在页面上滚动显示的评论 成就：达到特定条件后获得的荣誉标志 9.2 参考资料 微信小程序开发文档 微信云开发文档 MobX状态管理文档 WeUI组件库文档 9.3 版本历史 v1.0.0：初始版本，包含核心功能 v1.1.0：添加评论和弹幕功能 v1.2.0：添加事迹和成就系统 v1.3.0：优化用户体验，修复已知问题